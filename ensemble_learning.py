# -*- coding: utf-8 -*-
"""ensemble learning.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1PU4r40MiLi9OrXpIDFNutMk566SUSRgb
"""

import pandas as pd

# Load the three CSV files
RNN = pd.read_csv('/content/RNN.csv')
LSTM = pd.read_csv('/content/LSTM.csv')
GRU = pd.read_csv('/content/GRU.csv')

# Extract the actual and predicted values
actual_values = RNN['Actual']  # Assume all files have the same actual values
pred1 = RNN['Predicted']
pred2 = LSTM['Predicted']
pred3 = GRU['Predicted']

# Ensemble the predictions using averaging
ensemble_predictions = (pred1 + pred2 + pred3) / 3

from sklearn.metrics import mean_squared_error, mean_absolute_error, r2_score
import numpy as np

# Calculate metrics
ensemble_mae = mean_absolute_error(actual_values, ensemble_predictions)
# Calculate MAPE (Mean Absolute Percentage Error)
ensemble_mape = np.mean(np.abs((actual_values - ensemble_predictions) / actual_values)) * 100

# Calculate R^2 (R-squared)
ensemble_r2 = r2_score(actual_values, ensemble_predictions)

# Print metrics
print(f'Ensemble Mean Absolute Error (MAE): {ensemble_mae}')
print(f'Ensemble Mean Absolute Percentage Error (MAPE): {ensemble_mape}%')
print(f'Ensemble R-squared (RÂ²): {ensemble_r2}')

# Save to CSV
ensemble_df = pd.DataFrame({
    'Actual': actual_values,
    'Ensemble_Predicted': ensemble_predictions
})
ensemble_df.to_csv('ensemble_predictions.csv', index=False)

import matplotlib.pyplot as plt

# Plot Actual vs Predicted for Ensemble
plt.figure(figsize=(10, 6))
plt.plot(actual_values, label='Actual', color='blue', marker='o', linestyle='-', markersize=4)
plt.plot(ensemble_predictions, label='Ensemble Predicted', color='red', marker='x', linestyle='--', markersize=4)
plt.title('Actual vs Predicted (Ensemble Model)')
plt.xlabel('Index')
plt.ylabel('Value')
plt.legend()
plt.grid(True)
plt.show()